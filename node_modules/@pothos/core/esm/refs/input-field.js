import { inputFieldShapeKey } from '../types/index.js';
class InputFieldRef {
    toString() {
        var _this_argFor;
        if (this.kind !== "Arg") {
            if (this.fieldName) {
                return `${this.parentTypename}.${this.fieldName}`;
            }
            return this.parentTypename;
        }
        var _this_argFor_fieldName;
        const fieldName = (_this_argFor_fieldName = (_this_argFor = this.argFor) === null || _this_argFor === void 0 ? void 0 : _this_argFor.fieldName) !== null && _this_argFor_fieldName !== void 0 ? _this_argFor_fieldName : "[unnamed field]";
        var _this_fieldName;
        const argName = (_this_fieldName = this.fieldName) !== null && _this_fieldName !== void 0 ? _this_fieldName : "[unnamed argument]";
        return `${this.parentTypename}.${fieldName}(${argName})`;
    }
    constructor(kind, parentTypename) {
        this.kind = kind;
        this.parentTypename = parentTypename;
    }
}
export { InputFieldRef as default };
//# sourceMappingURL=input-field.js.map
