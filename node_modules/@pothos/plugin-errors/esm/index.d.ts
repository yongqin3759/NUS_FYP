import './global-types.js';
import { GraphQLFieldResolver, GraphQLIsTypeOfFn } from 'graphql';
import { BasePlugin, PothosObjectTypeConfig, PothosOutputFieldConfig, SchemaTypes } from '@pothos/core';
import { GetTypeName } from './types.js';
export * from './types.js';
declare const pluginName = "errors";
export default pluginName;
export declare function capitalize(s: string): string;
export declare const defaultGetResultName: GetTypeName;
export declare const defaultGetUnionName: GetTypeName;
export declare const unwrapError: unique symbol;
export declare class PothosErrorsPlugin<Types extends SchemaTypes> extends BasePlugin<Types> {
    wrapIsTypeOf(isTypeOf: GraphQLIsTypeOfFn<unknown, Types["Context"]> | undefined, config: PothosObjectTypeConfig): GraphQLIsTypeOfFn<unknown, Types["Context"]> | undefined;
    onOutputFieldConfig(fieldConfig: PothosOutputFieldConfig<Types>): PothosOutputFieldConfig<Types> | null;
    wrapResolve(resolver: GraphQLFieldResolver<unknown, Types["Context"], object>, fieldConfig: PothosOutputFieldConfig<Types>): GraphQLFieldResolver<unknown, Types["Context"], object>;
}
//# sourceMappingURL=index.d.ts.map
